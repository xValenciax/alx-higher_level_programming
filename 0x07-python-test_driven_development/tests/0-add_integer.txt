=========================================================
|    Testing Add Integer module using DocTest module    |
=========================================================

-------------------------------------------
add_integer function should be import first from add integer module

    >>> add_integer = __import__('0-add_integer').add_integer

'''
Integers (positive and negative)
should return correct integer addition result
'''

    >>> add_integer(2, 3)
    5
    >>> add_integer(2, -1)
    1
    >>> add_integer(5, 0)
    5
    >>> add_integer(-2, -3)
    -5
    >>> add_integer(2)
    100

'''
Floats (positive and negative)
should return correct integer result after converting
a and b into integers
'''

    >>> add_integer(1.5, 2.5)
    3
    >>> add_integer(-1.5, -2.5)
    -3
    >>> add_integer(3.14545456, 0)
    3

'''
a, b, or both are not integers nor floats
should raise a TypeError
with the correct error message
'''

    >>> add_integer('string', 10)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(20, 'string')
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(1, [1, 'str', True])
    Traceback (most recent call last):
    TypeError: b must be an integer

'''
return value must be an integer
'''

    >>> res = add_integer(1, 2)
    >>> isinstance(res, int)
    True

    >>> res = add_integer(1.5, 2.5)
    >>> isinstance(res, int)
    True
